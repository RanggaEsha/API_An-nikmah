openapi: "3.0.2"
info:
  title: AN-nikmah API
  version: "1.0"
servers:
  - url: http://127.0.0.1:5000

components:
  securitySchemes:
    bearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
paths:
  /login:
    post:
      summary: login
      tags:
      - "Authentication"
      description: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /register:
    post:
      summary: register
      tags:
      - "Authentication"
      description: register
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /protected:
    get:
      summary: protected
      tags:
      - "Authentication"
      description: to check the authorization
      security:
        - bearerToken: []
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
        "401":
          description: UNAUTHORIZED

  /products:
    get:
      summary: get all products
      tags:
        - "Products"
      description: get all products
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            example: 5
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: category
          in: query
          schema:
            type: string
        - name: keyword
          in: query
          schema:
            type: string
        - name: min_price
          in: query
          schema:
            type: string
        - name: max_price
          in: query
          schema: 
            type: string
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    post:
      summary: Upload product by id
      tags:
        - "Products"
      description: Upload product
      security:
        - bearerToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: integer
                quantity:
                  type: integer
                category_id:
                  type: integer
                file:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        "401":
          description: UNAUTHORIZED
  
  /products/{id}:
    get:
      summary: get product by id
      tags:
        - "Products"
      description: get all products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    put:
      summary: Update product
      tags:
        - "Products"
      description: Update product
      security:
        - bearerToken: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: integer
                quantity:
                  type: integer
                category_id:
                  type: integer
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        "401":
          description: UNAUTHORIZED
    delete:
      summary: Delete product
      tags:
        - "Products"
      description: Delete product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerToken: []
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
        "401":
          description: UNAUTHORIZED
  /products/{id}/images:
    get:
      summary: get product images by product_id
      tags:
        - "Product/images"
      description: get all product images
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    post:
      summary: Upload product images by product id
      tags:
        - "Product/images"
      description: Upload product images
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
        "401":
          description: UNAUTHORIZED
    delete:
      summary: Upload product images by product id
      tags:
        - "Product/images"
      description: Upload product images
      security:
        - bearerToken: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
        "401":
          description: UNAUTHORIZED
  /products/{product_id}/images/{image_id}:
    get:
      summary: get product images by product_id
      tags:
        - "Product/images"
      description: get all product images
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
        - name: image_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /categories:
    get:
      summary: get all categories
      tags:
        - "Categories"
      description: get all categories
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    post:
      summary: Add category
      tags:
        - "Categories"
      description: Add category
      security:
        - bearerToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
        "401":
          description: UNAUTHORIZED
  
  /categories/{id}:
    get:
      summary: get category by id
      tags:
        - "Categories"
      description: get all products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    put:
      summary: Update category
      tags:
        - "Categories"
      description: Update category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
        "401":
          description: UNAUTHORIZED
    delete:
      summary: Delete category
      tags:
        - "Categories"
      security:
        - bearerToken: []
      description: Delete category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '404':
          description: NOT FOUND
        "401":
          description: UNAUTHORIZED

  /categories/{id}/products:
    get:
      summary: get all products by category id
      tags:
        - "Categories"
      description: get all products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /carts:
    get:
      summary: get carts by user id
      tags:
        - "Carts"
      security:
        - bearerToken: []
      description: get all products
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    post:
      summary: add carts by user id
      tags:
        - "Carts"
      security:
        - bearerToken: []
      description: add all products
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                quantity:
                  type: integer
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    delete:
      summary: Delete carts by user id
      tags:
        - "Carts"
      security:
        - bearerToken: []
      description: Delete carts by user id
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /carts/{id}:
    delete:
      summary: Delete carts by user id
      tags:
        - "Carts"
      security:
        - bearerToken: []
      description: Delete carts by user id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /transactions:
    get:
      summary: get transactions by user id
      tags:
        - "Transactions"
      security:
        - bearerToken: []
      description: get all products
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    
    post:
      summary: Add transactions by id
      tags:
        - "Transactions"
      description: Add transactions
      security:
        - bearerToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                address:
                  type: string
                fullname:
                  type: string
                phone_number:
                  type: integer
                product_ids::
                  type: array
                  items:
                    type: string
                quantities::
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
    delete:
      summary: get transactions by user id
      tags:
        - "Transactions"
      security:
        - bearerToken: []
      description: get all products
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /categories/carts:
    post:
        summary: Add transactions from carts
        tags:
          - "Transactions"
        description: Add transactions
        security:
          - bearerToken: []
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  address:
                    type: string
                  fullname:
                    type: string
                  phone_number:
                    type: integer
                  cart_ids::
                    type: array
                    items:
                      type: string
        responses:
          '200':
            description: OK
          '404':
            description: Not Found
  /categories/{id}/details:
    get:
      summary: get transactions details by id
      tags:
        - "Transactions"
      security:
        - bearerToken: []
      description: get all products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
